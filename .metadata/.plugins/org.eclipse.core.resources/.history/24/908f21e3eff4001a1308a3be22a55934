package com.walmart.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.walmart.exceptions.StockException;
import com.walmart.pojo.Product;
import com.walmart.pojo.Sale;
import com.walmart.utils.DbUtil;

public class SaleDao implements SaleDaoInterface {

	Connection connect;
	Statement st;
	
	public SaleDao() throws SQLException{
		connect = DbUtil.getConnection("stock_mgmt");
		st = connect.createStatement();
		String query = "show tables like 'sales'";
		ResultSet r = st.executeQuery(query);
		if(!r.next())
			createTable();
		else if(!r.getString(1).equals("sales"))
			createTable();
	}

	private void createTable() throws SQLException {

		String create = "create table sales (saleId int, pid int, pname text, cost double, quantity int)";
		st.executeUpdate(create);
	}
	
	@Override
	public int addSale(Sale s) {

		int i=0;
		try {
			String sql="insert into sales values(?,?,?,?,?)";
			PreparedStatement pst=connect.prepareStatement(sql);
			pst.setInt(1, s.getSaleId());
			pst.setInt(2, s.getP().getPid());
			pst.setString(3, s.getP().getPname());
			pst.setDouble(4, s.getP().getCost());
			pst.setInt(5, s.getP().getQuantity());
			i=pst.executeUpdate();
		}catch(SQLException e) {
			e.printStackTrace();
		}
		return i;
	}

	@Override
	public int deleteSale(int sid) {
		
		int i=0;
		String sql="delete from sales where saleId=?";
		PreparedStatement pst;
		try {
			pst = connect.prepareStatement(sql);
			pst.setInt(1, sid);
			i=pst.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return i;
	}

	@Override
	public Sale getSaleById(int id) throws StockException {

		Sale s=new Sale();
		try {
			String sql="select * from sales where saleId=?";
			PreparedStatement pst = connect.prepareStatement(sql);
			pst.setInt(1, id);
			ResultSet rs=pst.executeQuery();
			if(rs.next()) {
				s.setSaleId(rs.getInt(1));
				Product p = new Product();
				p.setPid(rs.getInt(2));
				p.setPname(rs.getString(3));
				p.setCost(rs.getDouble(4));
				p.setQuantity(rs.getInt(5));
				s.setP(p);
			}
			else
				throw new StockException("Sale does not exist");
		}catch(SQLException e) {
			e.printStackTrace();
		}
		return s;
	}

	@Override
	public List<Sale> getAll() {
			
		List<Sale> sales=new ArrayList<Sale>();
		try {
			String sql="select * from sales";
			Statement pst = connect.createStatement();
			ResultSet rs=pst.executeQuery(sql);
			while(rs.next()) {
				Sale s = new Sale();
				Product p=new Product();
				s.setSaleId(rs.getInt(1));
				p.setPid(rs.getInt(2));
				p.setPname(rs.getString(3));
				p.setCost(rs.getDouble(4));
				p.setQuantity(rs.getInt(5));
				s.setP(p);
				products.add(p);
			}
		}catch(SQLException e) {
			e.printStackTrace();
		}			
		return products;
	}

}
