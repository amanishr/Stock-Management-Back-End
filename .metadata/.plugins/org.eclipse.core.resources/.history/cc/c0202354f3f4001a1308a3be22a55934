package com.walmart.services;

import java.sql.SQLException;
import java.util.List;

import com.walmart.dao.SaleDao;
import com.walmart.exceptions.StockException;
import com.walmart.pojo.Product;
import com.walmart.pojo.Sale;

public class SaleService implements SaleServiceInterface {

	SaleDao saleDao;
	ProductService pservice;
	
	public SaleService() throws SQLException{
		saleDao=new SaleDao();
		pservice = new ProductService();
	}
	
	@Override
	public int addSale(Sale s) throws StockException {

		int i=0;
		if(checkAvailability(s.getP())) {
			Product p = pservice.getProdcutById(s.getP().getPid());
			int qty = p.getQuantity() - s.getP().getQuantity();
			int r = pservice.editProdcut(qty, p.getCost(), p.getPid());
			if(r==1)
				saleDao.addSale(s);
			else
				throw new StockException("Unable to access product! Try again");
		}
		else {
			throw new StockException("Sale could not be processed due to product unavailability");
		}
		return i;
	}

	private boolean checkAvailability(Product pSale) {
			
		try {
			Product p = pservice.getProdcutById(pSale.getPid());
			if(p.getQuantity() >= pSale.getQuantity())
				return true;
			else
				return false;
		} catch (StockException e) {
			// TODO Auto-generated catch block
			return false;
		}
	}

	@Override
	public int removeSale(int sid) throws StockException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Sale getSaleById(int id) throws StockException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Sale> getAll() throws StockException {
		// TODO Auto-generated method stub
		return null;
	}

}
